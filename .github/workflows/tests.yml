# Adapted from https://docs.astral.sh/uv/guides/integration/github/#using-uv-in-github-actions

name: "Tests"

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request: ~

env:
    PYTHON_VERSION: 3.13.7
    UV_VERSION: 0.8.16

jobs:
  run-django-tests:
    name: python manage.py test --parallel --shuffle
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:17.5-alpine3.21@sha256:5d004e058f520673f1f6edbad6b1603d5dab4c818e257c041889ef64672a8cc4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
      redis:
        image: redis:8.0.3-alpine3.21@sha256:25c0ae32c6c2301798579f5944af53729766a18eff5660bbef196fc2e6214a9c
        ports:
        - 6379:6379

    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      name: Checkout

    - name: Install uv ${{ env.UV_VERSION }} & Python ${{ env.PYTHON_VERSION }}
      uses: astral-sh/setup-uv@557e51de59eb14aaaba2ed9621916900a91d50c6 # v6
      with:
        # The default value is "auto" and it resolves to "true" in Github-hosted runners, but explicit is better.
        enable-cache: true
        # uv can install Python, no need for actions/setup-python
        # https://github.com/astral-sh/setup-uv?tab=readme-ov-file#do-i-still-need-actionssetup-python-alongside-setup-uv
        # https://github.com/astral-sh/setup-uv?tab=readme-ov-file#python-version
        python-version: ${{ env.PYTHON_VERSION }}
        version: ${{ env.UV_VERSION }}

    - name: Install packages
      run: uv sync --frozen --no-install-project

    - name: Run tests
      working-directory: ./src
      env:
        APP_REDIS_URL: "redis://localhost:${{ job.services.redis.ports[6379] }}/1"
        CELERY_BROKER_URL: ""
        CELERY_RESULT_BACKEND: ""
        DATABASE_HOST: "localhost"
        DATABASE_NAME: "postgres"
        DATABASE_USER: "postgres"
        DATABASE_PASSWORD: "postgres"
        DATABASE_PORT: "${{ job.services.postgres.ports[5432] }}"
        SECRET_KEY: ""
        USE_SSL: "false"
      run: |
        uv run python manage.py wait_for_db
        uv run python manage.py wait_for_cache
        uv run python manage.py test --parallel --shuffle
